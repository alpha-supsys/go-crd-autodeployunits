/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/alpha-supsys/go-crd-autodeployunits/k8s/group/apis/autodeploy/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AutoDeployUnitLister helps list AutoDeployUnits.
// All objects returned here must be treated as read-only.
type AutoDeployUnitLister interface {
	// List lists all AutoDeployUnits in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.AutoDeployUnit, err error)
	// AutoDeployUnits returns an object that can list and get AutoDeployUnits.
	AutoDeployUnits(namespace string) AutoDeployUnitNamespaceLister
	AutoDeployUnitListerExpansion
}

// autoDeployUnitLister implements the AutoDeployUnitLister interface.
type autoDeployUnitLister struct {
	indexer cache.Indexer
}

// NewAutoDeployUnitLister returns a new AutoDeployUnitLister.
func NewAutoDeployUnitLister(indexer cache.Indexer) AutoDeployUnitLister {
	return &autoDeployUnitLister{indexer: indexer}
}

// List lists all AutoDeployUnits in the indexer.
func (s *autoDeployUnitLister) List(selector labels.Selector) (ret []*v1.AutoDeployUnit, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AutoDeployUnit))
	})
	return ret, err
}

// AutoDeployUnits returns an object that can list and get AutoDeployUnits.
func (s *autoDeployUnitLister) AutoDeployUnits(namespace string) AutoDeployUnitNamespaceLister {
	return autoDeployUnitNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AutoDeployUnitNamespaceLister helps list and get AutoDeployUnits.
// All objects returned here must be treated as read-only.
type AutoDeployUnitNamespaceLister interface {
	// List lists all AutoDeployUnits in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.AutoDeployUnit, err error)
	// Get retrieves the AutoDeployUnit from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.AutoDeployUnit, error)
	AutoDeployUnitNamespaceListerExpansion
}

// autoDeployUnitNamespaceLister implements the AutoDeployUnitNamespaceLister
// interface.
type autoDeployUnitNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AutoDeployUnits in the indexer for a given namespace.
func (s autoDeployUnitNamespaceLister) List(selector labels.Selector) (ret []*v1.AutoDeployUnit, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AutoDeployUnit))
	})
	return ret, err
}

// Get retrieves the AutoDeployUnit from the indexer for a given namespace and name.
func (s autoDeployUnitNamespaceLister) Get(name string) (*v1.AutoDeployUnit, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("autodeployunit"), name)
	}
	return obj.(*v1.AutoDeployUnit), nil
}
